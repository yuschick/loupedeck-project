{"version":3,"sources":["theme.ts","components/Button.tsx","routes/App/App.tsx","routes/App/index.ts","index.tsx"],"names":["colors","StyledButton","styled","button","background","lighten","CountText","p","Button","className","disabled","onClick","children","useState","count","setCount","AppContainer","main","ButtonsContainer","div","ButtonContainer","StyledText","SmallButton","BigButton","App","console","log","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAAaA,EACK,kBADLA,EAEG,gBAFHA,EAGG,gBAHHA,EAII,mBAJJA,EAKO,eALPA,EAMO,iB,w5BCOpB,IAwBMC,EAAeC,IAAOC,OAAV,KACA,gBAAGC,EAAH,EAAGA,WAAH,OACdA,GAA0BJ,KACV,gBAAGI,EAAH,EAAGA,WAAH,OAChBA,EAAaC,YAAQ,GAAKD,GAAcJ,IAiBxBA,EACPA,GAoBPM,EAAYJ,IAAOK,EAAV,KAKAC,EAvEgC,SAAC,GAMzC,IALLJ,EAKI,EALJA,WACAK,EAII,EAJJA,UAII,IAHJC,gBAGI,SAFJC,EAEI,EAFJA,QACAC,EACI,EADJA,SACI,EACsBC,mBAAiB,GADvC,mBACGC,EADH,KACUC,EADV,KAGJ,OACE,eAACd,EAAD,CACEG,WAAYA,EACZK,UAAWA,EACXC,SAAUA,EACVC,QAAS,WACPA,IACAI,EAASD,EAAQ,IANrB,UASGF,EATH,IASa,cAACN,EAAD,UAAYQ,Q,s6BC1B7B,IAuCME,EAAed,IAAOe,KAAV,KAMZC,EAAmBhB,IAAOiB,IAAV,KAQhBC,EAAkBlB,IAAOiB,IAAV,KAMfE,EAAanB,IAAOK,EAAV,KAQVe,EAAcpB,YAAOM,EAAPN,CAAH,KAKXqB,EAAYrB,YAAOM,EAAPN,CAAH,KC5EAsB,EDIsB,WACnC,OACE,cAACR,EAAD,UACE,eAACE,EAAD,WACE,eAACE,EAAD,WACE,cAACC,EAAD,sBACA,cAAC,EAAD,CAAQV,QAAS,kBAAMc,QAAQC,IAAI,2BAAnC,0BAIF,eAACN,EAAD,WACE,cAACC,EAAD,uBACA,cAAC,EAAD,CACEV,QAAS,kBAAMc,QAAQC,IAAI,kCAC3BhB,UAAQ,EAFV,sBAOF,eAACU,EAAD,WACE,cAACC,EAAD,qBACA,cAACC,EAAD,CACElB,WAAYJ,EACZW,QAAS,kBAAMc,QAAQC,IAAI,aAF7B,iBAMA,cAACH,EAAD,CACEnB,WAAYJ,EACZW,QAAS,kBAAMc,QAAQC,IAAI,yCAF7B,wD,swBE1BV,IAAMC,EAAcC,YAAH,IAkBC5B,EAGLA,GAYb6B,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACJ,EAAD,IACA,cAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.78094e09.chunk.js","sourcesContent":["export const colors: Record<string, string> = {\n  primary_accent: \"rgb(155,99,227)\",\n  primary_dark: \"rgb(19,19,19)\",\n  primary_grey: \"rgb(97,97,97)\",\n  primary_light: \"rgb(222,222,222)\",\n  primary_negative: \"rgb(92,5,18)\",\n  primary_positive: \"rgb(22,105,18)\",\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { lighten } from \"polished\";\n\nimport { colors } from \"theme\";\n\ninterface Props {\n  background?: string;\n  className?: string;\n  disabled?: boolean;\n  onClick: () => void;\n}\n\nconst Button: React.FunctionComponent<Props> = ({\n  background,\n  className,\n  disabled = false,\n  onClick,\n  children,\n}) => {\n  const [count, setCount] = useState<number>(0);\n\n  return (\n    <StyledButton\n      background={background}\n      className={className}\n      disabled={disabled}\n      onClick={() => {\n        onClick();\n        setCount(count + 1);\n      }}\n    >\n      {children} <CountText>{count}</CountText>\n    </StyledButton>\n  );\n};\n\nconst StyledButton = styled.button<{ background?: string }>`\n  --base-color: ${({ background }) =>\n    background ? background : colors.primary_dark};\n  --accent-color: ${({ background }) =>\n    background ? lighten(0.1, background) : colors.primary_accent};\n\n  align-items: center;\n  background: var(--base-color);\n  border: 1px solid var(--accent-color);\n  border-radius: 0.5rem;\n  color: var(--primary-light);\n  cursor: pointer;\n  display: flex;\n  height: 50px;\n  justify-content: center;\n  text-align: center;\n  transition: background 0.2s ease;\n  transform-origin: center;\n  width: 200px;\n\n  &[disabled] {\n    border-color: ${colors.primary_grey};\n    color: ${colors.primary_grey};\n    cursor: not-allowed;\n  }\n\n  &:not([disabled]) {\n    &:hover,\n    :focus {\n      background: var(--accent-color);\n    }\n\n    &:focus {\n      outline: 1px solid var(--accent-color);\n    }\n\n    &:active {\n      transform: scale(0.98);\n    }\n  }\n`;\n\nconst CountText = styled.p`\n  display: inline;\n  margin-left: 0.5rem;\n`;\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { colors } from \"theme\";\nimport Button from \"components/Button\";\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <AppContainer>\n      <ButtonsContainer>\n        <ButtonContainer>\n          <StyledText>Enabled</StyledText>\n          <Button onClick={() => console.log(\"Clicked enabled button\")}>\n            How many?\n          </Button>\n        </ButtonContainer>\n        <ButtonContainer>\n          <StyledText>Disabled</StyledText>\n          <Button\n            onClick={() => console.log(\"Well, this is pointless; huh?\")}\n            disabled\n          >\n            Nope!\n          </Button>\n        </ButtonContainer>\n        <ButtonContainer>\n          <StyledText>Custom</StyledText>\n          <SmallButton\n            background={colors.primary_positive}\n            onClick={() => console.log(\"So tiny!\")}\n          >\n            few\n          </SmallButton>\n          <BigButton\n            background={colors.primary_negative}\n            onClick={() => console.log(\"☠️☠️☠️\")}\n          >\n            ☠️ DANGER! ☠️\n          </BigButton>\n        </ButtonContainer>\n      </ButtonsContainer>\n    </AppContainer>\n  );\n};\n\nconst AppContainer = styled.main`\n  display: grid;\n  height: 100vh;\n  place-items: center;\n`;\n\nconst ButtonsContainer = styled.div`\n  align-items: start;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  justify-content: center;\n  width: 100%;\n`;\n\nconst ButtonContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledText = styled.p`\n  font-size: 1.05rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst SmallButton = styled(Button)`\n  height: 40px;\n  width: 100px;\n`;\n\nconst BigButton = styled(Button)`\n  display: block;\n  height: 100px;\n  margin-top: 1rem;\n  width: 320px;\n`;\n\nexport default App;\n","import App from \"./App\";\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport { colors } from \"theme\";\nimport App from \"./routes/App\";\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --primary_font: 'Raleway', sans-serif;\n  }\n\n  * {\n    border: 0;\n    box-sizing: border-box;\n    font-size: 100%;\n    margin: 0;\n    padding: 0;\n\t  vertical-align: baseline\n  }\n\n  html, body {\n    -webkit-font-smoothing: antialiased;\n    -webkit-text-size-adjust: none;\n\n    background: ${colors.primary_dark};\n    background-image: url(\"https://www.transparenttextures.com/patterns/brilliant.png\");\n    backface-visibility: hidden;\n    color: ${colors.primary_light};\n    font-family: var(--primary_font);\n    font-size: min(max(16px, 2vw), 18px);\n    font-weight: 400;\n    line-height: 1.75;\n\n    @supports(font-size: clamp(1rem, 1vw, 1rem)) {\n      font-size: clamp(16px, 2vw, 18px);\n    }\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}